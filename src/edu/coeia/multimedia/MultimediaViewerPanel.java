/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MultimediaViewerPanel.java
 *
 * Created on Jan 23, 2012, 9:27:58 AM
 */
package edu.coeia.multimedia;

import edu.coeia.cases.Case;
import edu.coeia.gutil.JTableUtil;
import edu.coeia.util.FileUtil;
import edu.coeia.util.FilesPath;

import java.io.File;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author wajdyessam
 */
public class MultimediaViewerPanel extends javax.swing.JPanel {

    private final Case aCase;
    private final MultimediaReader.TYPE type;
    
    /** Creates new form MultimediaViewerPanel */
    public MultimediaViewerPanel(final Case aCase, final MultimediaReader.TYPE type) {
        this.initComponents();
        this.aCase = aCase;
        this.type = type;
        
        this.filterTableTextField.getDocument().addDocumentListener(
                new DocumentListener() { 
            public void changedUpdate(DocumentEvent e){ doFilter(); }
            public void removeUpdate (DocumentEvent e){ doFilter(); }
            public void insertUpdate (DocumentEvent e){ doFilter(); }
            
            private void doFilter() {
                JTableUtil.filterTable(itemTable,
                        filterTableTextField.getText().trim());
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        filterPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        filterTableTextField = new javax.swing.JTextField();
        loadItemsButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File Path", "File Extension", "Last Modification Date", "Is Hidden", "File Size"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemTable.setFillsViewportHeight(true);
        jScrollPane1.setViewportView(itemTable);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        filterPanel.setLayout(new javax.swing.BoxLayout(filterPanel, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setText("Filter Table:");
        filterPanel.add(jLabel1);

        filterTableTextField.setText(" ");
        filterPanel.add(filterTableTextField);

        loadItemsButton.setText("Load Items");
        loadItemsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadItemsButtonActionPerformed(evt);
            }
        });
        filterPanel.add(loadItemsButton);

        add(filterPanel, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void loadItemsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadItemsButtonActionPerformed
        try {
            loadItems();
        } catch (Exception ex) {
            Logger.getLogger(MultimediaViewerPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loadItemsButtonActionPerformed

    private void loadItems() throws Exception {
        String caseLocation = this.aCase.getCaseLocation() + File.separator + FilesPath.INDEX_PATH;
        MultimediaReader reader = new MultimediaReader(caseLocation);
        List<String> paths = reader.getListPathsFromIndex(type, aCase);
        reader.close();
        
        for(String path: paths) {
            File file = new File(path);
            Object[] data = {file.getAbsolutePath(), FileUtil.getExtension(file),
                            file.lastModified(), file.isHidden(), file.length()};
            JTableUtil.addRowToJTable(itemTable, data);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel filterPanel;
    private javax.swing.JTextField filterTableTextField;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadItemsButton;
    // End of variables declaration//GEN-END:variables
}
