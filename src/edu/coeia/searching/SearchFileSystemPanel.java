/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SearchFileSystemPanel.java
 *
 * Created on Aug 14, 2011, 1:54:37 PM
 */
package edu.coeia.searching;

import edu.coeia.cases.Case;

import edu.coeia.gutil.GuiUtil;
import edu.coeia.gutil.GUIComponent ;
import edu.coeia.util.Utilities;
import edu.coeia.util.FilesPath ;
import edu.coeia.util.MetaDataExtraction ;

import java.awt.BorderLayout;
import java.awt.event.InputEvent;

import javax.swing.JOptionPane ;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode ;
import javax.swing.JFrame;

import java.io.File ;

import java.util.List; 
import java.util.logging.Logger;
import java.util.logging.Level;

import chrriis.dj.nativeswing.swtimpl.components.JWebBrowser;
import org.apache.tika.Tika;

/**
 *
 * @author wajdyessam
 */
public class SearchFileSystemPanel extends javax.swing.JPanel {

    private JWebBrowser fileBrowser = new JWebBrowser();
    
    private Case index;
    private JFrame parentFrame ;
    private final static Logger logger = Logger.getLogger(FilesPath.LOG_NAMESPACE);
    
    /** Creates new form SearchFileSystemPanel */
    public SearchFileSystemPanel(Case aIndex, JFrame aParentFrame) {
        initComponents();

        this.index = aIndex;
        this.parentFrame = aParentFrame;
        
        // add file browser
        fileBrowser.setBarsVisible(false);
        fileBrowser.setStatusBarVisible(false);
        fileRenderPanel.add(fileBrowser, BorderLayout.CENTER);  
        
        Utilities.packColumns(searchTable, 0);
        disableNotIndexedComponent();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        queryTextField = new javax.swing.JTextField();
        keywordsListButton = new javax.swing.JButton();
        startSearchingButton = new javax.swing.JButton();
        clearFieldsButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        searchProgressBard = new javax.swing.JProgressBar();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        jPanel24 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        clusterPathTree = new javax.swing.JTree();
        jPanel29 = new javax.swing.JPanel();
        jScrollPane27 = new javax.swing.JScrollPane();
        clusterTypeTree = new javax.swing.JTree();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        searchTime = new javax.swing.JLabel();
        searchingDateLbl = new javax.swing.JLabel();
        indexDirLbl2 = new javax.swing.JLabel();
        userQueryLbl = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        searchFileNameLbl = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        searchFileExtensionLbl = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        searchFileSizeLbl = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        fileRenderPanel = new javax.swing.JPanel();
        FileMetaDataPanel = new javax.swing.JPanel();
        jScrollPane28 = new javax.swing.JScrollPane();
        metaDataTextArea = new javax.swing.JTextArea();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Informations"));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel8.setText("User Query");

        queryTextField.setText(" ");

        keywordsListButton.setFont(new java.awt.Font("Tahoma", 1, 11));
        keywordsListButton.setText("Advanced Search Options");
        keywordsListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keywordsListButtonActionPerformed(evt);
            }
        });

        startSearchingButton.setFont(new java.awt.Font("Tahoma", 1, 11));
        startSearchingButton.setText("Start Searching");
        startSearchingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startSearchingButtonActionPerformed(evt);
            }
        });

        clearFieldsButton.setFont(new java.awt.Font("Tahoma", 1, 11));
        clearFieldsButton.setText("Clear Fields");
        clearFieldsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFieldsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startSearchingButton, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                    .addComponent(queryTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(clearFieldsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(keywordsListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(keywordsListButton)
                        .addGap(18, 18, 18)
                        .addComponent(clearFieldsButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(queryTextField)))
                        .addGap(18, 18, 18)
                        .addComponent(startSearchingButton)))
                .addGap(19, 19, 19))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        searchTable.setAutoCreateRowSorter(true);
        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "File Path"
            }
        ));
        searchTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        searchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                searchTableMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchTableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(searchTable);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );

        jTabbedPane4.addTab("Search Result", jPanel22);

        clusterPathTree.setModel(null);
        clusterPathTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                clusterPathTreeValueChanged(evt);
            }
        });
        jScrollPane12.setViewportView(clusterPathTree);

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );

        jTabbedPane4.addTab("Path Clustering", jPanel24);

        clusterTypeTree.setModel(null);
        clusterTypeTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                clusterTypeTreeValueChanged(evt);
            }
        });
        jScrollPane27.setViewportView(clusterTypeTree);

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane27, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane27, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );

        jTabbedPane4.addTab("Type Clustering", jPanel29);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchProgressBard, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
            .addComponent(jTabbedPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jTabbedPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(searchProgressBard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Searching History"));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel11.setText("Last Searching Date:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel12.setText("Searching Finishing Time:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel13.setText("Last Index Directory:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel14.setText("Last User Query:");

        searchTime.setFont(new java.awt.Font("Tahoma", 1, 11));
        searchTime.setForeground(new java.awt.Color(0, 0, 255));
        searchTime.setText(" ");

        searchingDateLbl.setFont(new java.awt.Font("Tahoma", 1, 11));
        searchingDateLbl.setForeground(new java.awt.Color(0, 0, 255));
        searchingDateLbl.setText(" ");

        indexDirLbl2.setFont(new java.awt.Font("Tahoma", 1, 11));
        indexDirLbl2.setForeground(new java.awt.Color(0, 0, 255));
        indexDirLbl2.setText(" ");

        userQueryLbl.setFont(new java.awt.Font("Tahoma", 1, 11));
        userQueryLbl.setForeground(new java.awt.Color(0, 0, 255));
        userQueryLbl.setText(" ");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(indexDirLbl2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchingDateLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userQueryLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchTime, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(searchingDateLbl))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(indexDirLbl2)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(searchTime))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(userQueryLbl))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("File Information"));

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel26.setText("File Name:");

        searchFileNameLbl.setFont(new java.awt.Font("Tahoma", 1, 11));
        searchFileNameLbl.setForeground(new java.awt.Color(0, 0, 255));
        searchFileNameLbl.setText(" ");

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel29.setText("File Extension:");

        searchFileExtensionLbl.setFont(new java.awt.Font("Tahoma", 1, 11));
        searchFileExtensionLbl.setForeground(new java.awt.Color(0, 0, 255));
        searchFileExtensionLbl.setText(" ");

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel31.setText("File Size:");

        searchFileSizeLbl.setFont(new java.awt.Font("Tahoma", 1, 11));
        searchFileSizeLbl.setForeground(new java.awt.Color(0, 0, 255));
        searchFileSizeLbl.setText(" ");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchFileSizeLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchFileExtensionLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchFileNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(searchFileNameLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(searchFileExtensionLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(searchFileSizeLbl))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        fileRenderPanel.setLayout(new java.awt.BorderLayout());
        jTabbedPane2.addTab("Full Text Content", fileRenderPanel);

        metaDataTextArea.setColumns(20);
        metaDataTextArea.setRows(5);
        jScrollPane28.setViewportView(metaDataTextArea);

        javax.swing.GroupLayout FileMetaDataPanelLayout = new javax.swing.GroupLayout(FileMetaDataPanel);
        FileMetaDataPanel.setLayout(FileMetaDataPanelLayout);
        FileMetaDataPanelLayout.setHorizontalGroup(
            FileMetaDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane28, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
        );
        FileMetaDataPanelLayout.setVerticalGroup(
            FileMetaDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane28, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("File MetaData", FileMetaDataPanel);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 823, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 477, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGap(11, 11, 11)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
    }// </editor-fold>//GEN-END:initComponents

private void keywordsListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keywordsListButtonActionPerformed
    showAdvancedSearch();
}//GEN-LAST:event_keywordsListButtonActionPerformed

private void startSearchingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startSearchingButtonActionPerformed
    startSearching(index.getExtensionAllowed());
}//GEN-LAST:event_startSearchingButtonActionPerformed

private void clearFieldsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFieldsButtonActionPerformed
    removeSearchField(true,false);
}//GEN-LAST:event_clearFieldsButtonActionPerformed

private void searchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTableMouseClicked
    resultTableClicked(evt);
}//GEN-LAST:event_searchTableMouseClicked

private void searchTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTableMousePressed
    tableMouseEvent(evt);
}//GEN-LAST:event_searchTableMousePressed

private void searchTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTableMouseReleased
    tableMouseEvent(evt);
}//GEN-LAST:event_searchTableMouseReleased

private void clusterPathTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_clusterPathTreeValueChanged
    clusterPathTreeAction();
}//GEN-LAST:event_clusterPathTreeValueChanged

private void clusterTypeTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_clusterTypeTreeValueChanged
    clusterTypeTreeAction();
}//GEN-LAST:event_clusterTypeTreeValueChanged

    private void tableMouseEvent(java.awt.event.MouseEvent evt) {
        if ( (evt.getModifiersEx() & InputEvent.BUTTON3_DOWN_MASK ) != 0 ) {
            if ( searchTable.isEnabled() )
                GuiUtil.showPopup(evt);
        }
    }
    
    private void resultTableClicked(java.awt.event.MouseEvent evt) {
        // set summary panel
        try {
            if ( (evt.getModifiersEx() & InputEvent.BUTTON3_DOWN_MASK ) != 0 ) {
                GuiUtil.showPopup(evt);
                return ;
            }

            // other click event
            int row = searchTable.getSelectedRow();
            String filePath = (String) searchTable.getValueAt(row, 0);

            showInformation(filePath);
        }
        catch (Exception e ){
            logger.log(Level.SEVERE, "Uncaught exception", e);
        }
    }
    
    private void showAdvancedSearch() {
        AdvancedSearchDialog asd = new AdvancedSearchDialog(null, true, index.getExtensionAllowed());
        asd.setVisible(true);

        String query = asd.getQuery() ;
        List<String> ext = asd.getSupportedExtensions() ;

        if ( query == null || query.isEmpty() )
            return ;

        if ( ext == null || ext.isEmpty())
            return ;

        queryTextField.setText(query);
        startSearching(ext);
    }
    
    private void clusterPathTreeAction() {
        try {
            DefaultMutableTreeNode node = (DefaultMutableTreeNode) clusterPathTree.getLastSelectedPathComponent();
            if ( node == null || node.isRoot() || ! node.isLeaf()) {
                return ;
            }
            
            String filePath= node.getUserObject().toString();
            showInformation(filePath);
       }
       catch (Exception e ){
           logger.log(Level.SEVERE, "Uncaught exception", e);
       }
    }
    
    private void clusterTypeTreeAction() {
        try {
            DefaultMutableTreeNode node = (DefaultMutableTreeNode) clusterTypeTree.getLastSelectedPathComponent();
            if ( node == null || node.isRoot() || ! node.isLeaf()) {
                return ;
            }

            String filePath= node.getUserObject().toString();
            showInformation(filePath);
       }
       catch (Exception e ){
       }
    }
    
    private void showInformation (String filePath) throws Exception {
        File fileName = new File(filePath);
        String keyword = queryTextField.getText().trim();
        String extension = Utilities.getExtension(fileName);
        
        searchFileNameLbl.setText(fileName.getName());
        searchFileExtensionLbl.setText(extension);
        searchFileSizeLbl.setText(fileName.length() + "");

        // set summary panel and file rendered panel depen on file
        if (extension.equalsIgnoreCase("txt")) {
            String content = Utilities.getFileContent(fileName) ;
            String highlither = "<span style=\"background-color: #FFFF00\">" + keyword +  "</span>" ;
            String rep = content.replace(keyword, highlither);
            fileBrowser.setHTMLContent(rep);
        }
        else if ( extension.equalsIgnoreCase("pdf") ) {
            //fileBrowser.navigate(filePath + "#search= " + keyword + "");
            String content = parseFile(fileName);
            String highlither = "<span style=\"background-color: #FFFF00\">" + keyword +  "</span>" ;
            String rep = content.replace(keyword, highlither);
            fileBrowser.setHTMLContent(rep);
        }
        else if ( extension.equalsIgnoreCase("html") ||
                  extension.equalsIgnoreCase("htm") ||
                  extension.equalsIgnoreCase("mht") ) {
            //fileBrowser.navigate(filePath);
            String content = parseFile(fileName);
            String highlither = "<span style=\"background-color: #FFFF00\">" + keyword +  "</span>" ;
            String rep = content.replace(keyword, highlither);
            fileBrowser.setHTMLContent(rep);
        }
        else if ( extension.equalsIgnoreCase("doc")) {
            String content = parseFile(fileName);
            String highlither = "<span style=\"background-color: #FFFF00\">" + keyword +  "</span>" ;
            String rep = content.replace(keyword, highlither);
            fileBrowser.setHTMLContent(rep);
        }

        // show matadata information for file
        String metaData = MetaDataExtraction.getMetaData(filePath);
        metaDataTextArea.setText(metaData);

        fileRenderPanel.validate();
    }
    
    private String parseFile(final File filePath) {
        Tika tika = new Tika();
        String bodyText = "" ;
        
        try {
            bodyText = tika.parseToString(filePath);
        }
        catch (Exception e ){
            
        }
        
        return (bodyText);
    }
    
    private void startSearching (List<String> supportedExtension) {
        removeSearchField(false,false);

        if ( index.getIndexStatus() == false ) {
            JOptionPane.showMessageDialog(this, "please do the indexing operation first before do any operation",
                    "Case is not indexed",JOptionPane.ERROR_MESSAGE );
            return ;
        }

        File indexLocation = new File (index.getIndexLocation() + "\\" + FilesPath.INDEX_PATH);
        String queryString = queryTextField.getText().trim();

        if ( queryString.isEmpty() ) {
            JOptionPane.showMessageDialog(this, "please fill the query string and choose an index location");
            return  ;
        }

        Utilities.packColumns(searchTable, 2);
        searchProgressBard.setIndeterminate(true);

        GUIComponent searchGUI = new GUIComponent(searchProgressBard,searchTable,searchingDateLbl,indexDirLbl2,
            userQueryLbl,searchTime, supportedExtension , clusterPathTree,clusterTypeTree);

         SearcherThread sThread = new SearcherThread(indexLocation,queryString,searchGUI);
         sThread.execute();
    }

    private void removeSearchField (boolean all, boolean restCheckBox) {
        searchProgressBard.setIndeterminate(false); 

        ( (DefaultTableModel) searchTable.getModel() ).getDataVector().removeAllElements();
        ( (DefaultTableModel) searchTable.getModel() ).fireTableDataChanged();
        
        fileBrowser.setHTMLContent("");

        if ( all ) {
            queryTextField.setText("");
        }

        if ( restCheckBox ) {
        }
    }
    
    private void disableNotIndexedComponent () {
        if ( index.getDocumentInIndex().isEmpty() ) {
            startSearchingButton.setEnabled(false);
            clearFieldsButton.setEnabled(false);
            keywordsListButton.setEnabled(false);
        }
    }
    
    public void setSearchKeyword (String text) {
        queryTextField.setText(text);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel FileMetaDataPanel;
    private javax.swing.JButton clearFieldsButton;
    private javax.swing.JTree clusterPathTree;
    private javax.swing.JTree clusterTypeTree;
    private javax.swing.JPanel fileRenderPanel;
    private javax.swing.JLabel indexDirLbl2;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane27;
    private javax.swing.JScrollPane jScrollPane28;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JButton keywordsListButton;
    private javax.swing.JTextArea metaDataTextArea;
    private javax.swing.JTextField queryTextField;
    private javax.swing.JLabel searchFileExtensionLbl;
    private javax.swing.JLabel searchFileNameLbl;
    private javax.swing.JLabel searchFileSizeLbl;
    private javax.swing.JProgressBar searchProgressBard;
    private javax.swing.JTable searchTable;
    private javax.swing.JLabel searchTime;
    private javax.swing.JLabel searchingDateLbl;
    private javax.swing.JButton startSearchingButton;
    private javax.swing.JLabel userQueryLbl;
    // End of variables declaration//GEN-END:variables
}
