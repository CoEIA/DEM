/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AdvancedSearchPanel.java
 *
 * Created on Oct 22, 2011, 8:17:54 AM
 */
package edu.coeia.searching;


import edu.coeia.cases.Case;

import edu.coeia.gutil.GuiUtil;
import edu.coeia.gutil.GUIComponent ;
import edu.coeia.util.Utilities;
import edu.coeia.util.FilesPath ;
import edu.coeia.util.MetaDataExtraction ;

import java.awt.BorderLayout;
import java.awt.event.InputEvent;

import javax.swing.JOptionPane ;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode ;
import javax.swing.JFrame;

import java.io.File ;

import java.util.List; 
import java.util.logging.Logger;
import java.util.logging.Level;

import chrriis.dj.nativeswing.swtimpl.components.JWebBrowser;
import edu.coeia.indexing.IndexingConstant;
import org.apache.lucene.document.Document;
import org.apache.lucene.document.Fieldable;
import org.apache.tika.Tika;

/**
 *
 * @author wajdyessam
 */
public class AdvancedSearchPanel extends javax.swing.JPanel {

    private JWebBrowser fileBrowser = new JWebBrowser();
    
    private Case caseObj;
    private JFrame parentFrame ;
    private final static Logger logger = Logger.getLogger(FilesPath.LOG_NAMESPACE);
    
    /** Creates new form AdvancedSearchPanel */
    public AdvancedSearchPanel(Case aIndex, JFrame aParentFrame) {
        initComponents();
        
        this.caseObj = aIndex;
        this.parentFrame = aParentFrame;
        
        // add file browser
        fileBrowser.setBarsVisible(false);
        fileBrowser.setStatusBarVisible(false);
        fileRenderPanel.add(fileBrowser, BorderLayout.CENTER);  
        
        Utilities.packColumns(searchTable, 0);
        disableNotIndexedComponent();        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LeftPanel = new javax.swing.JPanel();
        searchScopePanel = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        headerPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        queryTextField = new javax.swing.JTextField();
        advancedSearchLabelButton = new javax.swing.JLabel();
        startSearchingButton = new javax.swing.JButton();
        clearLabelButton = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        searchProgressBard = new javax.swing.JProgressBar();
        resultSavingButton = new javax.swing.JButton();
        CenterPanel = new javax.swing.JPanel();
        resultPanel = new javax.swing.JPanel();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        jPanel24 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        clusterPathTree = new javax.swing.JTree();
        jPanel29 = new javax.swing.JPanel();
        jScrollPane27 = new javax.swing.JScrollPane();
        clusterTypeTree = new javax.swing.JTree();
        viewPanel = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        fileRenderPanel = new javax.swing.JPanel();
        FileMetaDataPanel = new javax.swing.JPanel();
        jScrollPane28 = new javax.swing.JScrollPane();
        metaDataTextArea = new javax.swing.JTextArea();
        imageViewPanel = new javax.swing.JPanel();
        audioViewPanel = new javax.swing.JPanel();
        videoViewPanel = new javax.swing.JPanel();
        documentView = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        searchScopePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Scope"));

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("File System:");
        jCheckBox1.setEnabled(false);

        jCheckBox2.setText("Metadata");
        jCheckBox2.setEnabled(false);

        jCheckBox3.setSelected(true);
        jCheckBox3.setText("Content");
        jCheckBox3.setEnabled(false);

        jCheckBox4.setText("Email:");
        jCheckBox4.setEnabled(false);

        jCheckBox5.setText("Headers");
        jCheckBox5.setEnabled(false);

        jCheckBox6.setText("Content");
        jCheckBox6.setEnabled(false);

        jCheckBox7.setText("Instant Messaging:");
        jCheckBox7.setEnabled(false);

        jCheckBox8.setText("Content");
        jCheckBox8.setEnabled(false);

        javax.swing.GroupLayout searchScopePanelLayout = new javax.swing.GroupLayout(searchScopePanel);
        searchScopePanel.setLayout(searchScopePanelLayout);
        searchScopePanelLayout.setHorizontalGroup(
            searchScopePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchScopePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchScopePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox4)
                    .addGroup(searchScopePanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(searchScopePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, searchScopePanelLayout.createSequentialGroup()
                                .addComponent(jCheckBox5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBox6))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, searchScopePanelLayout.createSequentialGroup()
                                .addComponent(jCheckBox2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox3))))
                    .addGroup(searchScopePanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jCheckBox8))
                    .addComponent(jCheckBox7))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        searchScopePanelLayout.setVerticalGroup(
            searchScopePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchScopePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(searchScopePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchScopePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox5)
                    .addComponent(jCheckBox6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jCheckBox7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox8)
                .addContainerGap())
        );

        headerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Options"));

        jLabel1.setText("Query: ");

        queryTextField.setText(" ");

        advancedSearchLabelButton.setForeground(new java.awt.Color(0, 51, 255));
        advancedSearchLabelButton.setText("Advanced Search");
        advancedSearchLabelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                advancedSearchLabelButtonMouseClicked(evt);
            }
        });

        startSearchingButton.setText("Search");
        startSearchingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startSearchingButtonActionPerformed(evt);
            }
        });

        clearLabelButton.setForeground(new java.awt.Color(0, 0, 255));
        clearLabelButton.setText("Clear");
        clearLabelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearLabelButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(queryTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(startSearchingButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                        .addComponent(advancedSearchLabelButton)
                        .addGap(18, 18, 18)
                        .addComponent(clearLabelButton)))
                .addContainerGap())
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(queryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startSearchingButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearLabelButton)
                    .addComponent(advancedSearchLabelButton)))
        );

        resultSavingButton.setText("Save Results");
        resultSavingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultSavingButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchProgressBard, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(resultSavingButton)
                .addContainerGap(117, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchProgressBard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(resultSavingButton)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout LeftPanelLayout = new javax.swing.GroupLayout(LeftPanel);
        LeftPanel.setLayout(LeftPanelLayout);
        LeftPanelLayout.setHorizontalGroup(
            LeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchScopePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        LeftPanelLayout.setVerticalGroup(
            LeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchScopePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(LeftPanel, java.awt.BorderLayout.WEST);

        CenterPanel.setLayout(new java.awt.BorderLayout());

        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "File Name", "File Path", "Last Modification", "File Size", "File Tag"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        searchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                searchTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(searchTable);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
        );

        jTabbedPane4.addTab("Search Result", jPanel22);

        clusterPathTree.setModel(null);
        clusterPathTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                clusterPathTreeValueChanged(evt);
            }
        });
        jScrollPane12.setViewportView(clusterPathTree);

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
        );

        jTabbedPane4.addTab("Path Clustering", jPanel24);

        clusterTypeTree.setModel(null);
        clusterTypeTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                clusterTypeTreeValueChanged(evt);
            }
        });
        jScrollPane27.setViewportView(clusterTypeTree);

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane27, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane27, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
        );

        jTabbedPane4.addTab("Type Clustering", jPanel29);

        javax.swing.GroupLayout resultPanelLayout = new javax.swing.GroupLayout(resultPanel);
        resultPanel.setLayout(resultPanelLayout);
        resultPanelLayout.setHorizontalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                .addContainerGap())
        );
        resultPanelLayout.setVerticalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE))
        );

        CenterPanel.add(resultPanel, java.awt.BorderLayout.CENTER);

        fileRenderPanel.setLayout(new java.awt.BorderLayout());
        jTabbedPane2.addTab("Text Content", fileRenderPanel);

        metaDataTextArea.setColumns(20);
        metaDataTextArea.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        metaDataTextArea.setRows(5);
        jScrollPane28.setViewportView(metaDataTextArea);

        javax.swing.GroupLayout FileMetaDataPanelLayout = new javax.swing.GroupLayout(FileMetaDataPanel);
        FileMetaDataPanel.setLayout(FileMetaDataPanelLayout);
        FileMetaDataPanelLayout.setHorizontalGroup(
            FileMetaDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane28, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
        );
        FileMetaDataPanelLayout.setVerticalGroup(
            FileMetaDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane28, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("MetaData", FileMetaDataPanel);

        javax.swing.GroupLayout imageViewPanelLayout = new javax.swing.GroupLayout(imageViewPanel);
        imageViewPanel.setLayout(imageViewPanelLayout);
        imageViewPanelLayout.setHorizontalGroup(
            imageViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 573, Short.MAX_VALUE)
        );
        imageViewPanelLayout.setVerticalGroup(
            imageViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 161, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Image", imageViewPanel);

        javax.swing.GroupLayout audioViewPanelLayout = new javax.swing.GroupLayout(audioViewPanel);
        audioViewPanel.setLayout(audioViewPanelLayout);
        audioViewPanelLayout.setHorizontalGroup(
            audioViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 573, Short.MAX_VALUE)
        );
        audioViewPanelLayout.setVerticalGroup(
            audioViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 161, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Audio", audioViewPanel);

        javax.swing.GroupLayout videoViewPanelLayout = new javax.swing.GroupLayout(videoViewPanel);
        videoViewPanel.setLayout(videoViewPanelLayout);
        videoViewPanelLayout.setHorizontalGroup(
            videoViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 573, Short.MAX_VALUE)
        );
        videoViewPanelLayout.setVerticalGroup(
            videoViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 161, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Video", videoViewPanel);

        javax.swing.GroupLayout documentViewLayout = new javax.swing.GroupLayout(documentView);
        documentView.setLayout(documentViewLayout);
        documentViewLayout.setHorizontalGroup(
            documentViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 573, Short.MAX_VALUE)
        );
        documentViewLayout.setVerticalGroup(
            documentViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 161, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Document View", documentView);

        javax.swing.GroupLayout viewPanelLayout = new javax.swing.GroupLayout(viewPanel);
        viewPanel.setLayout(viewPanelLayout);
        viewPanelLayout.setHorizontalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                .addContainerGap())
        );
        viewPanelLayout.setVerticalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CenterPanel.add(viewPanel, java.awt.BorderLayout.SOUTH);

        add(CenterPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void clusterPathTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_clusterPathTreeValueChanged
        clusterPathTreeAction();
    }//GEN-LAST:event_clusterPathTreeValueChanged

    private void clusterTypeTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_clusterTypeTreeValueChanged
        clusterPathTreeAction();
    }//GEN-LAST:event_clusterTypeTreeValueChanged

    private void startSearchingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startSearchingButtonActionPerformed
        startSearching(caseObj.getExtensionAllowed());
    }//GEN-LAST:event_startSearchingButtonActionPerformed

    private void clearLabelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearLabelButtonMouseClicked
        removeSearchField(true,false);
    }//GEN-LAST:event_clearLabelButtonMouseClicked

    private void advancedSearchLabelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_advancedSearchLabelButtonMouseClicked
        showAdvancedSearch();
    }//GEN-LAST:event_advancedSearchLabelButtonMouseClicked

    private void searchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTableMouseClicked
        resultTableClicked(evt);
    }//GEN-LAST:event_searchTableMouseClicked

    private void searchTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTableMousePressed
        tableMouseEvent(evt);
    }//GEN-LAST:event_searchTableMousePressed

    private void resultSavingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultSavingButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resultSavingButtonActionPerformed

    private void tableMouseEvent(java.awt.event.MouseEvent evt) {
        if ( (evt.getModifiersEx() & InputEvent.BUTTON3_DOWN_MASK ) != 0 ) {
            if ( searchTable.isEnabled() )
                GuiUtil.showPopup(evt);
        }
    }
    
    private void resultTableClicked(java.awt.event.MouseEvent evt) {
        // set summary panel
        try {
            if ( (evt.getModifiersEx() & InputEvent.BUTTON3_DOWN_MASK ) != 0 ) {
                GuiUtil.showPopup(evt);
                return ;
            }

            // other click event
            int row = searchTable.getSelectedRow();
            String fileId = String.valueOf(searchTable.getValueAt(row, 0));

            showInformationByID(fileId);
        }
        catch (Exception e ){
            logger.log(Level.SEVERE, "Uncaught exception", e);
        }
    }
    
    private void showAdvancedSearch() {
        AdvancedSearchDialog asd = new AdvancedSearchDialog(null, true, caseObj.getExtensionAllowed());
        asd.setVisible(true);

        String query = asd.getQuery() ;
        List<String> ext = asd.getSupportedExtensions() ;

        if ( query == null || query.isEmpty() )
            return ;

        if ( ext == null || ext.isEmpty())
            return ;

        queryTextField.setText(query);
        startSearching(ext);
    }
    
    private void clusterPathTreeAction() {
        try {
            DefaultMutableTreeNode node = (DefaultMutableTreeNode) clusterPathTree.getLastSelectedPathComponent();
            if ( node == null || node.isRoot() || ! node.isLeaf()) {
                return ;
            }
            
            String filePath= node.getUserObject().toString();
            showInformation(filePath);
       }
       catch (Exception e ){
           logger.log(Level.SEVERE, "Uncaught exception", e);
       }
    }
    
    private void clusterTypeTreeAction() {
        try {
            DefaultMutableTreeNode node = (DefaultMutableTreeNode) clusterTypeTree.getLastSelectedPathComponent();
            if ( node == null || node.isRoot() || ! node.isLeaf()) {
                return ;
            }

            String filePath= node.getUserObject().toString();
            showInformation(filePath);
       }
       catch (Exception e ){
       }
    }
    
    private void showInformationByID (String fileId) {
        System.out.println("fileId: " + fileId);
        
        try {
            File indexPath = new File(caseObj.getIndexLocation() + "\\" + FilesPath.INDEX_PATH);
            LuceneSearcher searcher = new LuceneSearcher(indexPath);
            Document document = searcher.searchById(fileId);
            
            String content = document.get(IndexingConstant.FILE_CONTENT);
            
            List<Fieldable> fields = document.getFields();
            StringBuilder metadataBuilder = new StringBuilder();
            
            for (Fieldable field: fields) {
                if ( ! field.name().startsWith("file_")) // files in IndexingConstant start with prefix file_
                    metadataBuilder.append(field.name()).append(" : " ).append(field.stringValue()).append("\n");
            }
            
            String metadata = metadataBuilder.toString();
            String keyword = queryTextField.getText().trim().toLowerCase();
            
            String highlither = "<span style=\"background-color: #FFFF00\">" + keyword +  "</span>" ;
            String rep = content.replace(keyword, highlither);
            fileBrowser.setHTMLContent(rep);

            // show matadata information for file
            metaDataTextArea.setText(metadata);

            fileRenderPanel.validate();
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private void showInformation (String filePath) throws Exception {
        File fileName = new File(filePath);
        
        String keyword = queryTextField.getText().trim();
        String extension = Utilities.getExtension(fileName);
        
//        searchFileNameLbl.setText(fileName.getName());
//        searchFileExtensionLbl.setText(extension);
//        searchFileSizeLbl.setText(fileName.length() + "");

        // set summary panel and file rendered panel depen on file
//        if (extension.equalsIgnoreCase("txt")) {
//            String content = Utilities.getFileContent(fileName) ;
//            String highlither = "<span style=\"background-color: #FFFF00\">" + keyword +  "</span>" ;
//            String rep = content.replace(keyword, highlither);
//            fileBrowser.setHTMLContent(rep);
//        }
//        else if ( extension.equalsIgnoreCase("pdf") ) {
//            //fileBrowser.navigate(filePath + "#search= " + keyword + "");
//            String content = parseFile(fileName);
//            String highlither = "<span style=\"background-color: #FFFF00\">" + keyword +  "</span>" ;
//            String rep = content.replace(keyword, highlither);
//            fileBrowser.setHTMLContent(rep);
//        }
//        else if ( extension.equalsIgnoreCase("html") ||
//                  extension.equalsIgnoreCase("htm") ||
//                  extension.equalsIgnoreCase("mht") ) {
//            //fileBrowser.navigate(filePath);
//            String content = parseFile(fileName);
//            String highlither = "<span style=\"background-color: #FFFF00\">" + keyword +  "</span>" ;
//            String rep = content.replace(keyword, highlither);
//            fileBrowser.setHTMLContent(rep);
//        }
//        else if ( extension.equalsIgnoreCase("doc")) {
//            String content = parseFile(fileName);
//            String highlither = "<span style=\"background-color: #FFFF00\">" + keyword +  "</span>" ;
//            String rep = content.replace(keyword, highlither);
//            fileBrowser.setHTMLContent(rep);
//        }

        String content = parseFile(fileName);
        String highlither = "<span style=\"background-color: #FFFF00\">" + keyword +  "</span>" ;
        String rep = content.replace(keyword, highlither);
        fileBrowser.setHTMLContent(rep);
            
        // show matadata information for file
        String metaData = MetaDataExtraction.getMetaData(filePath);
        metaDataTextArea.setText(metaData);
        
        fileRenderPanel.validate();
    }
    
    private String parseFile(final File filePath) {
        Tika tika = new Tika();
        String bodyText = "" ;
        
        try {
            bodyText = tika.parseToString(filePath);
        }
        catch (Exception e ){
            
        }
        
        return (bodyText);
    }
    
    private void startSearching (List<String> supportedExtension) {
        removeSearchField(false,false);

        if ( caseObj.getIndexStatus() == false ) {
            JOptionPane.showMessageDialog(this, "please do the indexing operation first before do any operation",
                    "Case is not indexed",JOptionPane.ERROR_MESSAGE );
            return ;
        }

        File indexLocation = new File (caseObj.getIndexLocation() + "\\" + FilesPath.INDEX_PATH);
        String queryString = queryTextField.getText().trim();

        if ( queryString.isEmpty() ) {
            JOptionPane.showMessageDialog(this, "please fill the query string and choose an index location");
            return  ;
        }

        Utilities.packColumns(searchTable, 2);
        searchProgressBard.setIndeterminate(true);

        GUIComponent searchGUI = new GUIComponent(searchProgressBard,searchTable,null,null,
            null,null, supportedExtension , clusterPathTree,clusterTypeTree);

         SearcherThread sThread = new SearcherThread(indexLocation,queryString,searchGUI);
         sThread.execute();
    }

    private void removeSearchField (boolean all, boolean restCheckBox) {
        searchProgressBard.setIndeterminate(false); 

        ( (DefaultTableModel) searchTable.getModel() ).getDataVector().removeAllElements();
        ( (DefaultTableModel) searchTable.getModel() ).fireTableDataChanged();
        
        fileBrowser.setHTMLContent("");

        if ( all ) {
            queryTextField.setText("");
        }

        if ( restCheckBox ) {
        }
    }
    
    private void disableNotIndexedComponent () {
        if ( caseObj.getDocumentInIndex().isEmpty() ) {
            startSearchingButton.setEnabled(false);
//            clearFieldsButton.setEnabled(false);
//            keywordsListButton.setEnabled(false);
        }
    }
    
    public void setSearchKeyword (String text) {
        queryTextField.setText(text);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CenterPanel;
    private javax.swing.JPanel FileMetaDataPanel;
    private javax.swing.JPanel LeftPanel;
    private javax.swing.JLabel advancedSearchLabelButton;
    private javax.swing.JPanel audioViewPanel;
    private javax.swing.JLabel clearLabelButton;
    private javax.swing.JTree clusterPathTree;
    private javax.swing.JTree clusterTypeTree;
    private javax.swing.JPanel documentView;
    private javax.swing.JPanel fileRenderPanel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JPanel imageViewPanel;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane27;
    private javax.swing.JScrollPane jScrollPane28;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTextArea metaDataTextArea;
    private javax.swing.JTextField queryTextField;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JButton resultSavingButton;
    private javax.swing.JProgressBar searchProgressBard;
    private javax.swing.JPanel searchScopePanel;
    private javax.swing.JTable searchTable;
    private javax.swing.JButton startSearchingButton;
    private javax.swing.JPanel videoViewPanel;
    private javax.swing.JPanel viewPanel;
    // End of variables declaration//GEN-END:variables
}
