/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SmartCardDialog.java
 *
 * Created on Jan 16, 2011, 2:07:26 PM
 */

package edu.coeia.gui;

import edu.coeia.utility.FilesPath ;
import edu.coeia.utility.Utilities;

import java.util.ArrayList;
import javax.swing.JOptionPane;


/**
 *
 * @author wajdyessam
 */
public class SmartCardDialog extends javax.swing.JDialog {

    private boolean result ;
    private boolean normalCheck ;
    
    /** Creates new form SmartCardDialog */
    public SmartCardDialog(java.awt.Frame parent, boolean modal, boolean normalCheck) {
        super(parent, modal);
        initComponents();
        this.normalCheck = normalCheck;
        
        setLocationRelativeTo(parent);
    }

    public boolean getResult () {
        return result;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jLabel2 = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Digital Evidence Miner: License Checker");

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("Please insert smart card and press continue to continue the process ....");
        jToolBar1.add(jLabel2);

        okButton.setText("Continue ...");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        result = false;

        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        result = checkCard();

        if ( result == true ) {
            if ( ! normalCheck ) { // this will be called after finish create new case
                decreaseNumber();

                if ( checkExpire() ) {
                    JOptionPane.showMessageDialog(this, "Licence Key Expire", "you must contact CoEIA to renewal licence",
                        JOptionPane.INFORMATION_MESSAGE);
                }
                else {
                    int number = readCaseNumber();

                    JOptionPane.showMessageDialog(this, "you have: " + number + " number of usages","Press ok to continue",
                        JOptionPane.INFORMATION_MESSAGE);

                    setVisible(false);
                }
            }
            else {  // this code will be executed after check license button
                 int number = readCaseNumber();

                    JOptionPane.showMessageDialog(this, "you have: " + number + " number of usages","Press ok to continue",
                        JOptionPane.INFORMATION_MESSAGE);

                    setVisible(false);
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "please make sure that you insert the right smart card",
                    "Please Insert Smart Card", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_okButtonActionPerformed

    private boolean checkCard() {
        boolean data = false;

        try {
            ArrayList<String> output = Utilities.readProgramOutputStream(FilesPath.SMART_CARD_PROGRAM + " s");
            data = Boolean.valueOf(output.get(0));
        }
        catch (Exception e){
            data = false;
        }

        return data;
    }
   
    private void decreaseNumber () {
         try {
           Utilities.readProgramOutputStream(FilesPath.SMART_CARD_PROGRAM + " d");
        }
        catch (Exception e){
        }
    }

    private int readCaseNumber(){
        int data = -1;

        try {
            ArrayList<String> output = Utilities.readProgramOutputStream(FilesPath.SMART_CARD_PROGRAM + " n");
            data = Integer.valueOf(output.get(0));
        }
        catch (Exception e){
            data = -1;
        }

        return data;
    }

    private boolean checkExpire () {
        int caseNumber = readCaseNumber();
        if ( caseNumber == 0) {
            return true;
        }

        return false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables

}
