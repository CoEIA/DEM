/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CaseVerificationDialog.java
 *
 * Created on Feb 4, 2012, 9:41:51 AM
 */
package edu.coeia.verification;

import edu.coeia.gutil.JListUtil;
import edu.coeia.main.CaseMainFrame;

import java.util.List;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author wajdyessam
 */

public final class CaseVerificationDialog extends javax.swing.JDialog {

    /** Creates new form CaseVerificationDialog */
    private final CaseMainFrame caseFrame ;
    private final DefaultListModel evidenceModel;
    
    public CaseVerificationDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.caseFrame = (CaseMainFrame) parent;
        this.setLocationRelativeTo(parent);
        this.evidenceModel = new DefaultListModel();
        this.fillEvidenceList();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        caseHashVerifyPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        evidenceHashValueTextField = new javax.swing.JTextField();
        verifyButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        evidenceList = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Please Select the Evidence Folder and enter its hash value");
        setResizable(false);

        jLabel9.setText("Evidence Folder Hash Value:");

        evidenceHashValueTextField.setText(" ");

        verifyButton.setText("Verifey");
        verifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Select The Evidence Folder:");

        jScrollPane1.setViewportView(evidenceList);

        javax.swing.GroupLayout caseHashVerifyPanelLayout = new javax.swing.GroupLayout(caseHashVerifyPanel);
        caseHashVerifyPanel.setLayout(caseHashVerifyPanelLayout);
        caseHashVerifyPanelLayout.setHorizontalGroup(
            caseHashVerifyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(caseHashVerifyPanelLayout.createSequentialGroup()
                .addGroup(caseHashVerifyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(caseHashVerifyPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE))
                    .addGroup(caseHashVerifyPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(caseHashVerifyPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(caseHashVerifyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(evidenceHashValueTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, caseHashVerifyPanelLayout.createSequentialGroup()
                .addContainerGap(165, Short.MAX_VALUE)
                .addComponent(verifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155))
        );
        caseHashVerifyPanelLayout.setVerticalGroup(
            caseHashVerifyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(caseHashVerifyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                .addGap(19, 19, 19)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(evidenceHashValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(verifyButton)
                .addContainerGap())
        );

        getContentPane().add(caseHashVerifyPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void verifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyButtonActionPerformed
        // check if there is not element selection in list
        Object value = this.evidenceList.getSelectedValue();
        if ( value == null ) {
            JOptionPane.showMessageDialog(this, "Please Select Source First",
                     "select the evidence folder you want to verify", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String hash = this.evidenceHashValueTextField.getText().trim();
        if (!hash.isEmpty()) {
            HashVerifier.newInstance(this.caseFrame, hash, 
                    String.valueOf(value)).start();
        } else {
            JOptionPane.showMessageDialog(this, "Please enter the original hash value", "Missing Hash Value", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_verifyButtonActionPerformed

    private void fillEvidenceList() {
        List<String> locations = this.caseFrame.getCaseFacade().getCase().getEvidenceSourceLocation();
        for(String location: locations) {
            JListUtil.addToList(location, evidenceModel, evidenceList);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel caseHashVerifyPanel;
    private javax.swing.JTextField evidenceHashValueTextField;
    private javax.swing.JList evidenceList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton verifyButton;
    // End of variables declaration//GEN-END:variables
}
