/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * IndexPanel.java
 *
 * Created on Aug 14, 2011, 1:52:14 PM
 */
package edu.coeia.filesystem.index;

import edu.coeia.cases.Case;
import edu.coeia.filesystem.gui.FileSystemPanel;
import edu.coeia.main.gui.util.InfiniteProgressPanel;
import edu.coeia.main.gui.util.WrapLayout;
import edu.coeia.main.gui.util.IndexGUIComponent;
import edu.coeia.main.gui.util.GuiUtil;
import edu.coeia.main.util.Utilities;
import edu.coeia.main.util.FilesPath ;

import java.awt.BorderLayout;
import java.awt.event.InputEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.JOptionPane ;
import javax.swing.table.DefaultTableModel;
import javax.swing.JPanel ;
import javax.swing.event.DocumentEvent ;
import javax.swing.event.DocumentListener ;
import javax.swing.JLabel;
import javax.swing.JFrame;

import java.io.File ;
import java.io.IOException ;

import java.util.List; 
import java.util.HashMap ;
import java.util.Iterator ;
import java.util.Map ;
import java.util.Set ;
import java.util.logging.Logger;
import java.util.logging.Level;
import java.util.ArrayList;

import org.mcavallo.opencloud.Cloud ;
import org.mcavallo.opencloud.Tag ;

/**
 *
 * @author wajdyessam
 */
public class IndexFileSystemPanel extends javax.swing.JPanel {
    private List<String> imagesPath ;
    
    private IndexerThread indexerThread ;
    private boolean startIndexButtonFlag = true ;
    
    private Case index;
    private JFrame parentFrame ;
    private FileSystemPanel parentPanel ;
    
    private final static Logger logger = Logger.getLogger(edu.coeia.main.util.FilesPath.LOG_NAMESPACE);
    
    /** Creates new form IndexPanel */
    public IndexFileSystemPanel(Case aIndex, JFrame aParentFrame, FileSystemPanel aParentPanel) {
        initComponents();
        
        this.index = aIndex;
        this.parentFrame = aParentFrame;
        this.parentPanel = aParentPanel;
        
        Utilities.setTableAlignmentValue(cloudsTable, 1);
        //add a native web browser
        tagsPanel.setLayout(new WrapLayout());
        
        cloudsFilterTextField.getDocument().addDocumentListener(new CloudsInputListener());

        // set start and end button
        startIndexButton.setEnabled(startIndexButtonFlag);
        stopIndexingButton.setEnabled(! startIndexButtonFlag);

        // display indexing information if already indexing
        if ( index.getIndexStatus() ) {
            indexDateLbl.setText(index.getLastIndexDate());
            timeLbl.setText(index.getIndexingTime());
        }          

        this.imagesPath = new ArrayList<String>();
        disableNotIndexedComponent();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        indexGroupButton = new javax.swing.ButtonGroup();
        indexFileSystemButtonsPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jToolBar4 = new javax.swing.JToolBar(javax.swing.JToolBar.VERTICAL);
        indexFilesToggleButton = new javax.swing.JToggleButton();
        textCloudsToggleButton = new javax.swing.JToggleButton();
        indexVisualizationToggleButton = new javax.swing.JToggleButton();
        indexCardsPanel = new javax.swing.JPanel();
        indexPanel = new javax.swing.JPanel();
        progressStatusPanel = new javax.swing.JPanel();
        progresLabelPanel = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        currentFileLbl = new javax.swing.JLabel();
        numberOfFilesLbl = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        numberOfErrorFilesLbl = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        sizeOfFileLbl = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        fileExtensionLbl = new javax.swing.JLabel();
        bigSizeMsgLbl = new javax.swing.JLabel();
        indexControlPanel = new javax.swing.JPanel();
        startIndexButton = new javax.swing.JButton();
        stopIndexingButton = new javax.swing.JButton();
        progressPanel = new javax.swing.JPanel();
        progressBar = new javax.swing.JProgressBar();
        InfinatePanel = new javax.swing.JPanel();
        loggingPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        indexTable = new javax.swing.JTable();
        indexHistoryPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        timeLbl = new javax.swing.JLabel();
        indexDateLbl = new javax.swing.JLabel();
        textCloudsPanel = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        tagSelectButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tagsNumberTextField = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        tagsExcludeTextField = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        tagsDisplayComboBox = new javax.swing.JComboBox();
        jPanel16 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane10 = new javax.swing.JScrollPane();
        tagsPanel = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane22 = new javax.swing.JScrollPane();
        cloudsTable = new javax.swing.JTable();
        jLabel33 = new javax.swing.JLabel();
        cloudsFilterTextField = new javax.swing.JTextField();
        indexVisualizingPanel = new javax.swing.JPanel();
        indexVisualizationButtonPanel = new javax.swing.JPanel();
        indexVisulizingButton = new javax.swing.JButton();
        indexVisualizingPiePanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        indexFileSystemButtonsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        indexFileSystemButtonsPanel.setPreferredSize(new java.awt.Dimension(150, 408));

        jToolBar4.setFloatable(false);
        jToolBar4.setOrientation(javax.swing.JToolBar.VERTICAL);
        jToolBar4.setRollover(true);

        indexGroupButton.add(indexFilesToggleButton);
        indexFilesToggleButton.setFont(new java.awt.Font("Tahoma", 1, 11));
        indexFilesToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/coeia/gui/resources/help_index.png"))); // NOI18N
        indexFilesToggleButton.setText("Index File System");
        indexFilesToggleButton.setFocusable(false);
        indexFilesToggleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        indexFilesToggleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        indexFilesToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indexFilesToggleButtonActionPerformed(evt);
            }
        });
        jToolBar4.add(indexFilesToggleButton);

        indexGroupButton.add(textCloudsToggleButton);
        textCloudsToggleButton.setFont(new java.awt.Font("Tahoma", 1, 11));
        textCloudsToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/coeia/gui/resources/old-edit-find.png"))); // NOI18N
        textCloudsToggleButton.setText("Index Tags Cloud");
        textCloudsToggleButton.setFocusable(false);
        textCloudsToggleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        textCloudsToggleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        textCloudsToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCloudsToggleButtonActionPerformed(evt);
            }
        });
        jToolBar4.add(textCloudsToggleButton);

        indexGroupButton.add(indexVisualizationToggleButton);
        indexVisualizationToggleButton.setFont(new java.awt.Font("Tahoma", 1, 11));
        indexVisualizationToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/coeia/gui/resources/pie_chart.png"))); // NOI18N
        indexVisualizationToggleButton.setText("Index Visualization");
        indexVisualizationToggleButton.setFocusable(false);
        indexVisualizationToggleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        indexVisualizationToggleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        indexVisualizationToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indexVisualizationToggleButtonActionPerformed(evt);
            }
        });
        jToolBar4.add(indexVisualizationToggleButton);

        jScrollPane2.setViewportView(jToolBar4);

        javax.swing.GroupLayout indexFileSystemButtonsPanelLayout = new javax.swing.GroupLayout(indexFileSystemButtonsPanel);
        indexFileSystemButtonsPanel.setLayout(indexFileSystemButtonsPanelLayout);
        indexFileSystemButtonsPanelLayout.setHorizontalGroup(
            indexFileSystemButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexFileSystemButtonsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );
        indexFileSystemButtonsPanelLayout.setVerticalGroup(
            indexFileSystemButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexFileSystemButtonsPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(indexFileSystemButtonsPanel, java.awt.BorderLayout.WEST);

        indexCardsPanel.setLayout(new java.awt.CardLayout());

        indexPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        indexPanel.setLayout(new java.awt.BorderLayout());

        progressStatusPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index File System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        progressStatusPanel.setLayout(new java.awt.BorderLayout());

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel23.setText("Current File:");

        currentFileLbl.setFont(new java.awt.Font("Tahoma", 1, 11));
        currentFileLbl.setForeground(new java.awt.Color(0, 0, 255));
        currentFileLbl.setText(" ");

        numberOfFilesLbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        numberOfFilesLbl.setForeground(new java.awt.Color(0, 0, 255));
        numberOfFilesLbl.setText(" ");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel27.setText("Number of Files in Index:");

        numberOfErrorFilesLbl.setFont(new java.awt.Font("Tahoma", 1, 11));
        numberOfErrorFilesLbl.setForeground(new java.awt.Color(0, 0, 255));
        numberOfErrorFilesLbl.setText(" ");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel25.setText("File Size:");

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel41.setText("Number of Files Cannot Indexed:");

        sizeOfFileLbl.setFont(new java.awt.Font("Tahoma", 1, 11));
        sizeOfFileLbl.setForeground(new java.awt.Color(0, 0, 255));
        sizeOfFileLbl.setText(" ");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel24.setText("File Extension:");

        fileExtensionLbl.setFont(new java.awt.Font("Tahoma", 1, 11));
        fileExtensionLbl.setForeground(new java.awt.Color(0, 0, 255));
        fileExtensionLbl.setText(" ");

        bigSizeMsgLbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bigSizeMsgLbl.setForeground(new java.awt.Color(255, 0, 0));
        bigSizeMsgLbl.setText(" ");

        javax.swing.GroupLayout progresLabelPanelLayout = new javax.swing.GroupLayout(progresLabelPanel);
        progresLabelPanel.setLayout(progresLabelPanelLayout);
        progresLabelPanelLayout.setHorizontalGroup(
            progresLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progresLabelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(progresLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(progresLabelPanelLayout.createSequentialGroup()
                        .addGroup(progresLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(currentFileLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(progresLabelPanelLayout.createSequentialGroup()
                        .addGroup(progresLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(bigSizeMsgLbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, progresLabelPanelLayout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(numberOfFilesLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, progresLabelPanelLayout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(sizeOfFileLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(progresLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel41))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(progresLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(numberOfErrorFilesLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fileExtensionLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        progresLabelPanelLayout.setVerticalGroup(
            progresLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progresLabelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(progresLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(currentFileLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(progresLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(sizeOfFileLbl)
                    .addComponent(fileExtensionLbl)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(progresLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(numberOfFilesLbl)
                    .addComponent(jLabel41)
                    .addComponent(numberOfErrorFilesLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bigSizeMsgLbl)
                .addContainerGap())
        );

        progressStatusPanel.add(progresLabelPanel, java.awt.BorderLayout.NORTH);

        startIndexButton.setFont(new java.awt.Font("Tahoma", 1, 11));
        startIndexButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/coeia/gui/resources/database.png"))); // NOI18N
        startIndexButton.setText("Start Indexing");
        startIndexButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startIndexButtonActionPerformed(evt);
            }
        });

        stopIndexingButton.setFont(new java.awt.Font("Tahoma", 1, 11));
        stopIndexingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/coeia/gui/resources/cancel.png"))); // NOI18N
        stopIndexingButton.setText("Stop Indexing");
        stopIndexingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopIndexingButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout indexControlPanelLayout = new javax.swing.GroupLayout(indexControlPanel);
        indexControlPanel.setLayout(indexControlPanelLayout);
        indexControlPanelLayout.setHorizontalGroup(
            indexControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startIndexButton, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(stopIndexingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        indexControlPanelLayout.setVerticalGroup(
            indexControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(indexControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startIndexButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopIndexingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        progressStatusPanel.add(indexControlPanel, java.awt.BorderLayout.SOUTH);

        InfinatePanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout progressPanelLayout = new javax.swing.GroupLayout(progressPanel);
        progressPanel.setLayout(progressPanelLayout);
        progressPanelLayout.setHorizontalGroup(
            progressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progressPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(progressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, progressPanelLayout.createSequentialGroup()
                        .addComponent(InfinatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107))
                    .addGroup(progressPanelLayout.createSequentialGroup()
                        .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        progressPanelLayout.setVerticalGroup(
            progressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progressPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InfinatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        progressStatusPanel.add(progressPanel, java.awt.BorderLayout.CENTER);

        indexPanel.add(progressStatusPanel, java.awt.BorderLayout.NORTH);

        loggingPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "logging", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        indexTable.setAutoCreateRowSorter(true);
        indexTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "File Type", "File Path", "Indexing Status"
            }
        ));
        jScrollPane1.setViewportView(indexTable);

        javax.swing.GroupLayout loggingPanelLayout = new javax.swing.GroupLayout(loggingPanel);
        loggingPanel.setLayout(loggingPanelLayout);
        loggingPanelLayout.setHorizontalGroup(
            loggingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loggingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                .addContainerGap())
        );
        loggingPanelLayout.setVerticalGroup(
            loggingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loggingPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                .addContainerGap())
        );

        indexPanel.add(loggingPanel, java.awt.BorderLayout.CENTER);

        indexHistoryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Indexing History", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel4.setText("Last Indexing Date:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel5.setText("Indexing Finishing Time:");

        timeLbl.setFont(new java.awt.Font("Tahoma", 1, 11));
        timeLbl.setForeground(new java.awt.Color(0, 0, 255));
        timeLbl.setText(" ");

        indexDateLbl.setFont(new java.awt.Font("Tahoma", 1, 11));
        indexDateLbl.setForeground(new java.awt.Color(0, 0, 255));
        indexDateLbl.setText(" ");

        javax.swing.GroupLayout indexHistoryPanelLayout = new javax.swing.GroupLayout(indexHistoryPanel);
        indexHistoryPanel.setLayout(indexHistoryPanelLayout);
        indexHistoryPanelLayout.setHorizontalGroup(
            indexHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexHistoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(indexDateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(timeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        indexHistoryPanelLayout.setVerticalGroup(
            indexHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexHistoryPanelLayout.createSequentialGroup()
                .addGroup(indexHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(indexHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(indexDateLbl))
                    .addComponent(timeLbl)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        indexPanel.add(indexHistoryPanel, java.awt.BorderLayout.SOUTH);

        indexCardsPanel.add(indexPanel, "indexCard");

        textCloudsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        textCloudsPanel.setLayout(new java.awt.BorderLayout());

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index Tags Cloud", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        tagSelectButton.setFont(new java.awt.Font("Tahoma", 1, 11));
        tagSelectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/coeia/gui/resources/textCloud.png"))); // NOI18N
        tagSelectButton.setText("Generate Text Clouds");
        tagSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tagSelectButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel2.setText("Number Of Tags: ");

        tagsNumberTextField.setText(" 200");

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel36.setText("Exclude Tags Less Than:");

        tagsExcludeTextField.setText("1");
        tagsExcludeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tagsExcludeTextFieldActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel37.setText("Display Type:");

        tagsDisplayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Alphabetically Sort - Ascending", "Alphabetically Sort - descending ", "Score Sort - Ascending", "Score Sort - descending" }));

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(tagsNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel36)
                        .addGap(18, 18, 18)
                        .addComponent(tagsExcludeTextField))
                    .addComponent(tagsDisplayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addComponent(tagSelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel2)
                            .addComponent(tagsNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel36)
                            .addComponent(tagsExcludeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel37)
                            .addComponent(tagsDisplayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(tagSelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        textCloudsPanel.add(jPanel15, java.awt.BorderLayout.NORTH);

        tagsPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout tagsPanelLayout = new javax.swing.GroupLayout(tagsPanel);
        tagsPanel.setLayout(tagsPanelLayout);
        tagsPanelLayout.setHorizontalGroup(
            tagsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1757, Short.MAX_VALUE)
        );
        tagsPanelLayout.setVerticalGroup(
            tagsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 613, Short.MAX_VALUE)
        );

        jScrollPane10.setViewportView(tagsPanel);

        jTabbedPane1.addTab("Tags Cloud", jScrollPane10);

        jScrollPane22.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        cloudsTable.setFont(new java.awt.Font("Tahoma", 1, 11));
        cloudsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Word", "Frequency"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cloudsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cloudsTableMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cloudsTableMouseReleased(evt);
            }
        });
        jScrollPane22.setViewportView(cloudsTable);

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel33.setForeground(new java.awt.Color(0, 70, 213));
        jLabel33.setText("Filter Table:");

        cloudsFilterTextField.setText(" ");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cloudsFilterTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane22, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(cloudsFilterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Words Frequency", jPanel19);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                .addContainerGap())
        );

        textCloudsPanel.add(jPanel16, java.awt.BorderLayout.CENTER);

        indexCardsPanel.add(textCloudsPanel, "textCloudsCard");

        indexVisualizingPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        indexVisualizingPanel.setLayout(new java.awt.BorderLayout());

        indexVisualizationButtonPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index Visualization", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        indexVisulizingButton.setFont(new java.awt.Font("Tahoma", 1, 11));
        indexVisulizingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/coeia/gui/resources/chart_pie.png"))); // NOI18N
        indexVisulizingButton.setText("Index Visualization");
        indexVisulizingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indexVisulizingButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout indexVisualizationButtonPanelLayout = new javax.swing.GroupLayout(indexVisualizationButtonPanel);
        indexVisualizationButtonPanel.setLayout(indexVisualizationButtonPanelLayout);
        indexVisualizationButtonPanelLayout.setHorizontalGroup(
            indexVisualizationButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexVisualizationButtonPanelLayout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(indexVisulizingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(232, Short.MAX_VALUE))
        );
        indexVisualizationButtonPanelLayout.setVerticalGroup(
            indexVisualizationButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexVisualizationButtonPanelLayout.createSequentialGroup()
                .addComponent(indexVisulizingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        indexVisualizingPanel.add(indexVisualizationButtonPanel, java.awt.BorderLayout.NORTH);

        indexVisualizingPiePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Visualizing File Extension in Index", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        indexVisualizingPiePanel.setLayout(new java.awt.BorderLayout());
        indexVisualizingPanel.add(indexVisualizingPiePanel, java.awt.BorderLayout.CENTER);

        indexCardsPanel.add(indexVisualizingPanel, "indexVisualizingCard");

        add(indexCardsPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

private void indexFilesToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indexFilesToggleButtonActionPerformed
        GuiUtil.showPanel("indexCard", indexCardsPanel);
}//GEN-LAST:event_indexFilesToggleButtonActionPerformed

private void textCloudsToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textCloudsToggleButtonActionPerformed
        GuiUtil.showPanel("textCloudsCard", indexCardsPanel);
}//GEN-LAST:event_textCloudsToggleButtonActionPerformed

private void indexVisualizationToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indexVisualizationToggleButtonActionPerformed
        GuiUtil.showPanel("indexVisualizingCard", indexCardsPanel);
}//GEN-LAST:event_indexVisualizationToggleButtonActionPerformed

private void startIndexButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startIndexButtonActionPerformed
        File indexLocation = new File ( index.getIndexLocation() + "\\" + FilesPath.INDEX_PATH );

        startIndexButton.setEnabled(! startIndexButtonFlag);
        stopIndexingButton.setEnabled(startIndexButtonFlag);

        Utilities.removeAllRows(indexTable);
        
        IndexGUIComponent indexGUI = new IndexGUIComponent(progressBar,indexTable,indexDateLbl
            ,timeLbl,currentFileLbl, sizeOfFileLbl, numberOfFilesLbl, fileExtensionLbl, numberOfErrorFilesLbl,bigSizeMsgLbl, startIndexButton,
            stopIndexingButton);

        indexerThread = new IndexerThread(indexLocation,indexGUI,index,imagesPath);
        indexerThread.execute();
}//GEN-LAST:event_startIndexButtonActionPerformed

private void stopIndexingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopIndexingButtonActionPerformed
        if ( indexerThread != null) {
            indexerThread.clearFields();
            indexerThread.cancel(true);
            indexerThread = null ;
        }
}//GEN-LAST:event_stopIndexingButtonActionPerformed

private void tagSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tagSelectButtonActionPerformed
        try {
            if ( index.getIndexStatus() == false ) {
                JOptionPane.showMessageDialog(this, "please do the indexing operation first before do any operation",
                    "Case is not indexed",JOptionPane.ERROR_MESSAGE );
                return ;
            }

            // remove data
            Utilities.removeAllRows(cloudsTable);
            tagsPanel.removeAll();

            tagsPanel.repaint();
            tagsPanel.validate();

            InfiniteProgressPanel i = new InfiniteProgressPanel("Loading Index Tags Clouds...");
            parentFrame.setGlassPane(i);
            i.start();

            String indexPath = index.getIndexLocation() + "\\" + FilesPath.INDEX_PATH;
            String indexName = index.getIndexName() ;

            IndexReaderThread thread = new IndexReaderThread(i, indexPath, indexName, IndexReaderThread.IndexItem.TAGS, this);
            thread.execute();

            tagsPanel.repaint();
            tagsPanel.validate();
        }
        catch (NumberFormatException n){
            JOptionPane.showMessageDialog(this, "number is not correct",
                        "integer number is no correct", JOptionPane.ERROR_MESSAGE);
            logger.log(Level.SEVERE, "Uncaught exception", n);
        }
        catch (IOException e){
            e.printStackTrace();
            logger.log(Level.SEVERE, "Uncaught exception", e);
        }
}//GEN-LAST:event_tagSelectButtonActionPerformed

private void tagsExcludeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tagsExcludeTextFieldActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_tagsExcludeTextFieldActionPerformed

private void cloudsTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cloudsTableMousePressed
        if ( (evt.getModifiersEx() & InputEvent.BUTTON3_DOWN_MASK ) != 0 ) {
            if ( cloudsTable.isEnabled() )
                GuiUtil.showPopup(evt);
        }
}//GEN-LAST:event_cloudsTableMousePressed

private void cloudsTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cloudsTableMouseReleased
        if ( (evt.getModifiersEx() & InputEvent.BUTTON3_DOWN_MASK ) != 0 ) {
            if ( cloudsTable.isEnabled() )
                GuiUtil.showPopup(evt);
        }
}//GEN-LAST:event_cloudsTableMouseReleased

private void indexVisulizingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indexVisulizingButtonActionPerformed
        try {
            if ( index.getIndexStatus() == false ) {
                JOptionPane.showMessageDialog(this, "please do the indexing operation first before do any operation",
                    "Case is not indexed",JOptionPane.ERROR_MESSAGE );
                return ;
            }

            indexVisualizingPiePanel.removeAll();

            String indexPath = index.getIndexLocation() + "\\" + FilesPath.INDEX_PATH;
            String indexName = index.getIndexName() ;
            
            InfiniteProgressPanel i = new InfiniteProgressPanel("Loading Index Extensions ...");
            parentFrame.setGlassPane(i);
            i.start();

            IndexReaderThread thread = new IndexReaderThread(i, indexPath, indexName, IndexReaderThread.IndexItem.EXT, this);
            thread.execute();

            indexVisualizingPiePanel.repaint();
            indexVisualizingPiePanel.validate();
        }
        catch (IOException e){
            logger.log(Level.SEVERE, "Uncaught exception", e);
        }
}//GEN-LAST:event_indexVisulizingButtonActionPerformed



    public void setIndexVisualizationPanel (JPanel panel) {
        indexVisualizingPiePanel.add( panel ,BorderLayout.CENTER);
        indexVisualizingPiePanel.validate();
    }

    public void setTags (HashMap<String,Integer> tagsMap) {
        int excludeNumber = Integer.parseInt(tagsExcludeTextField.getText().trim());
        int tagsNumber = Integer.parseInt(tagsNumberTextField.getText().trim());

        if ( excludeNumber < 0 ) {
            logger.log(Level.INFO, "exlude number less than zero");
            JOptionPane.showMessageDialog(this, "number is not correct","please enter valid integer", JOptionPane.ERROR_MESSAGE);

            return;
        }

        if ( tagsNumber < 0 ) {
            logger.log(Level.INFO, "tags number less than zero");
            JOptionPane.showMessageDialog(this, "number is not correct","please enter valid integer", JOptionPane.ERROR_MESSAGE);

            return ;
        }
            
        if ( tagsNumber > tagsMap.size()) {
            JOptionPane.showMessageDialog(this, "number is greater than words in index",
                    "Too Much Input", JOptionPane.ERROR_MESSAGE);
            tagsNumberTextField.setText( (tagsMap.size()/3) + "");
            return ;
        }

        // create cloud
        Cloud cloud = new Cloud();
        cloud.setMaxWeight(50.0);
        cloud.setThreshold(excludeNumber); //show just tags with this number
        cloud.setMaxTagsToDisplay(tagsNumber);

        Set set = tagsMap.entrySet();
        Iterator itr= set.iterator();
        while ( itr.hasNext() ) {
            Map.Entry me = (Map.Entry) itr.next();

            String text = (String) me.getKey();
            int value   = (Integer)me.getValue();

             ((DefaultTableModel) cloudsTable.getModel() ).addRow( new Object[]
                { text , value }
             );

            Tag tag = new Tag(text, value);
            tag.setLink("Term: " + text + " Frequnecy: " + value);
            tag.setScore(value);

            cloud.addTag(tag);
        }

        List<Tag> tags = null;

        if ( tagsDisplayComboBox.getSelectedIndex() == 0 )
            tags = cloud.tags(new Tag.NameComparatorAsc() ) ;
        else if ( tagsDisplayComboBox.getSelectedIndex() == 1)
            tags = cloud.tags(new Tag.NameComparatorDesc() );
        else if ( tagsDisplayComboBox.getSelectedIndex() == 2)
            tags = cloud.tags( new Tag.ScoreComparatorAsc() );
        else if ( tagsDisplayComboBox.getSelectedIndex() == 3)
            tags = cloud.tags( new Tag.ScoreComparatorDesc());

        for (Tag tag: tags) {
            JLabel lbl = new JLabel(tag.getName());
            lbl.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, tag.getWeightInt()));
            lbl.addMouseListener(new MouseAdapter() {
                @Override
                public void mousePressed (MouseEvent e) {
                    JLabel m = (JLabel) e.getSource();
                    doSearch(m.getText());
                }
                @Override
                public void mouseReleased(MouseEvent e) {
                    JLabel m = (JLabel) e.getSource();
                    doSearch(m.getText());
                }

                public void doSearch(String text){
                    parentPanel.showSearchWithKeyword(text);
                }
            });

            lbl.setToolTipText(tag.getName() + " repeated: " + tag.getScoreInt());
            lbl.setForeground(java.awt.Color.BLUE.darker());
            lbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            tagsPanel.add(lbl);
            lbl = null ;
        }
    }

    public void filterCloudTable () {
        String text = cloudsFilterTextField.getText().trim();
        GuiUtil.filterTable(cloudsTable, text);
    }
    
    private class CloudsInputListener implements DocumentListener {
        public void changedUpdate(DocumentEvent e){filterCloudTable();}
        public void removeUpdate (DocumentEvent e){filterCloudTable();}
        public void insertUpdate (DocumentEvent e){filterCloudTable();}
    }

    private void disableNotIndexedComponent () {
        if ( index.getDocumentInIndex().isEmpty() ) {
            startIndexButton.setEnabled(false);
            tagSelectButton.setEnabled(false);
            indexVisulizingButton.setEnabled(false);
            cloudsTable.setEnabled(false);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel InfinatePanel;
    private javax.swing.JLabel bigSizeMsgLbl;
    private javax.swing.JTextField cloudsFilterTextField;
    private javax.swing.JTable cloudsTable;
    private javax.swing.JLabel currentFileLbl;
    private javax.swing.JLabel fileExtensionLbl;
    private javax.swing.JPanel indexCardsPanel;
    private javax.swing.JPanel indexControlPanel;
    private javax.swing.JLabel indexDateLbl;
    private javax.swing.JPanel indexFileSystemButtonsPanel;
    private javax.swing.JToggleButton indexFilesToggleButton;
    private javax.swing.ButtonGroup indexGroupButton;
    private javax.swing.JPanel indexHistoryPanel;
    private javax.swing.JPanel indexPanel;
    private javax.swing.JTable indexTable;
    private javax.swing.JPanel indexVisualizationButtonPanel;
    private javax.swing.JToggleButton indexVisualizationToggleButton;
    private javax.swing.JPanel indexVisualizingPanel;
    private javax.swing.JPanel indexVisualizingPiePanel;
    private javax.swing.JButton indexVisulizingButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar4;
    private javax.swing.JPanel loggingPanel;
    private javax.swing.JLabel numberOfErrorFilesLbl;
    private javax.swing.JLabel numberOfFilesLbl;
    private javax.swing.JPanel progresLabelPanel;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JPanel progressPanel;
    private javax.swing.JPanel progressStatusPanel;
    private javax.swing.JLabel sizeOfFileLbl;
    private javax.swing.JButton startIndexButton;
    private javax.swing.JButton stopIndexingButton;
    private javax.swing.JButton tagSelectButton;
    private javax.swing.JComboBox tagsDisplayComboBox;
    private javax.swing.JTextField tagsExcludeTextField;
    private javax.swing.JTextField tagsNumberTextField;
    private javax.swing.JPanel tagsPanel;
    private javax.swing.JPanel textCloudsPanel;
    private javax.swing.JToggleButton textCloudsToggleButton;
    private javax.swing.JLabel timeLbl;
    // End of variables declaration//GEN-END:variables
}
