/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CaseInformationPanel.java
 *
 * Created on Oct 5, 2011, 11:07:42 AM
 */
package edu.coeia.filesystem;

import edu.coeia.cases.CaseFacade;
import edu.coeia.cases.CaseHistory;
import edu.coeia.constants.ResourceManager;
import edu.coeia.gutil.JListUtil;
import edu.coeia.gutil.JTableUtil;
import edu.coeia.main.CaseMainFrame;
import edu.coeia.tags.Tag;
import edu.coeia.tags.TagsDialog;
import edu.coeia.util.ApplicationLogging;
import edu.coeia.util.DateUtil;
import edu.coeia.util.FileUtil;
import edu.coeia.util.Utilities;
import edu.coeia.wizard.EmailConfiguration;
import java.awt.ComponentOrientation;
import java.awt.EventQueue;
import java.awt.Toolkit;
import java.io.File;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author wajdyessam
 */
public final class CaseInformationPanel extends javax.swing.JPanel {

    private final CaseMainFrame parent ;
    private final CaseFacade caseFacade ;
    
    private int currentTagIndex;
    private DefaultListModel filsSystemSourcesModel;
    private DefaultListModel emailSourcesModel;
    
    private final static Logger logger = ApplicationLogging.getLogger();
    
    /** Creates new form CaseInformationPanel */
    public CaseInformationPanel(CaseMainFrame frame) {
        initComponents();
        
        this.parent = frame;
        this.caseFacade = frame.getCaseFacade();
                
        this.filsSystemSourcesModel = new DefaultListModel();
        this.emailSourcesModel = new DefaultListModel();
        
        // initializing tags panel
        this.initializingTagsPanel();
        
        // update case information panel
        this.displayCaseInformationPanel();
        this.displayMutableCaseInformationPanel();
        this.loadCaseAuditing();
        
        this.applyComponentOrientation(ComponentOrientation.getOrientation(ResourceManager.getLanguage()));
        logger.info("building case information panel");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        caseInformationPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        caseNameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        createdDateTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lastModifiedTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        casePathTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        indexedTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        itemIndexedTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        caseDescriptionTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        createdByTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        caseSizeTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        emailSourcesList = new javax.swing.JList();
        jScrollPane6 = new javax.swing.JScrollPane();
        caseSourcesList = new javax.swing.JList();
        tagsLogsPanel = new javax.swing.JPanel();
        caseLogsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        caseLogsTable = new javax.swing.JTable();
        caseTagsPanel = new javax.swing.JPanel();
        caseTagsViewerPanel = new javax.swing.JPanel();
        caseTagVeiwerPanel = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        tagNameTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        tagDateTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tagContentTextArea = new javax.swing.JTextArea();
        caseTagControllerPanel = new javax.swing.JPanel();
        nextButton = new javax.swing.JButton();
        prevButton = new javax.swing.JButton();
        currentTagLabel = new javax.swing.JLabel();
        caseTagsButtonsPanel = new javax.swing.JPanel();
        newTagsButton = new javax.swing.JButton();
        removeTagsButton = new javax.swing.JButton();
        saveCaseButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("edu/coeia/filesystem/Bundle"); // NOI18N
        caseInformationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("CaseInformationPanel.caseInformationPanel.border.title"))); // NOI18N

        jLabel1.setText(bundle.getString("CaseInformationPanel.jLabel1.text")); // NOI18N

        caseNameTextField.setEditable(false);
        caseNameTextField.setText(bundle.getString("CaseInformationPanel.caseNameTextField.text")); // NOI18N

        jLabel2.setText(bundle.getString("CaseInformationPanel.jLabel2.text")); // NOI18N

        createdDateTextField.setEditable(false);
        createdDateTextField.setText(bundle.getString("CaseInformationPanel.createdDateTextField.text")); // NOI18N

        jLabel3.setText(bundle.getString("CaseInformationPanel.jLabel3.text")); // NOI18N

        lastModifiedTextField.setEditable(false);
        lastModifiedTextField.setText(bundle.getString("CaseInformationPanel.lastModifiedTextField.text")); // NOI18N

        jLabel4.setText(bundle.getString("CaseInformationPanel.jLabel4.text")); // NOI18N

        casePathTextField.setEditable(false);
        casePathTextField.setText(bundle.getString("CaseInformationPanel.casePathTextField.text")); // NOI18N

        jLabel5.setText(bundle.getString("CaseInformationPanel.jLabel5.text")); // NOI18N

        indexedTextField.setEditable(false);
        indexedTextField.setText(bundle.getString("CaseInformationPanel.indexedTextField.text")); // NOI18N

        jLabel6.setText(bundle.getString("CaseInformationPanel.jLabel6.text")); // NOI18N

        itemIndexedTextField.setEditable(false);
        itemIndexedTextField.setText(bundle.getString("CaseInformationPanel.itemIndexedTextField.text")); // NOI18N

        jLabel7.setText(bundle.getString("CaseInformationPanel.jLabel7.text")); // NOI18N

        caseDescriptionTextField.setEditable(false);
        caseDescriptionTextField.setText(bundle.getString("CaseInformationPanel.caseDescriptionTextField.text")); // NOI18N

        jLabel8.setText(bundle.getString("CaseInformationPanel.jLabel8.text")); // NOI18N

        createdByTextField.setEditable(false);
        createdByTextField.setText(bundle.getString("CaseInformationPanel.createdByTextField.text")); // NOI18N

        jLabel10.setText(bundle.getString("CaseInformationPanel.jLabel10.text")); // NOI18N

        caseSizeTextField.setEditable(false);
        caseSizeTextField.setText(bundle.getString("CaseInformationPanel.caseSizeTextField.text")); // NOI18N

        jLabel11.setText(bundle.getString("CaseInformationPanel.jLabel11.text")); // NOI18N

        jLabel9.setText(bundle.getString("CaseInformationPanel.jLabel9.text")); // NOI18N

        jScrollPane5.setViewportView(emailSourcesList);

        jScrollPane6.setViewportView(caseSourcesList);

        javax.swing.GroupLayout caseInformationPanelLayout = new javax.swing.GroupLayout(caseInformationPanel);
        caseInformationPanel.setLayout(caseInformationPanelLayout);
        caseInformationPanelLayout.setHorizontalGroup(
            caseInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(caseInformationPanelLayout.createSequentialGroup()
                .addGroup(caseInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(caseInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(caseSizeTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(caseDescriptionTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(itemIndexedTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(indexedTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(casePathTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(lastModifiedTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(createdDateTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(createdByTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(caseNameTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)))
        );
        caseInformationPanelLayout.setVerticalGroup(
            caseInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(caseInformationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(caseInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(caseNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(caseInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(createdByTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(caseInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(createdDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(caseInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lastModifiedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(caseInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(casePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(caseInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(indexedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(caseInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(itemIndexedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(caseInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(caseDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(caseInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(caseSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(caseInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(caseInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(24, 24, 24))
        );

        add(caseInformationPanel, java.awt.BorderLayout.WEST);

        tagsLogsPanel.setLayout(new java.awt.BorderLayout());

        caseLogsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("CaseInformationPanel.caseLogsPanel.border.title"))); // NOI18N
        caseLogsPanel.setLayout(new java.awt.BorderLayout());

        caseLogsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Investigator Name", "User Name", "Time Stamp", "Case Name", "Action"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        caseLogsTable.setFillsViewportHeight(true);
        caseLogsTable.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(caseLogsTable);

        caseLogsPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        tagsLogsPanel.add(caseLogsPanel, java.awt.BorderLayout.CENTER);

        caseTagsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("CaseInformationPanel.caseTagsPanel.border.title"))); // NOI18N
        caseTagsPanel.setLayout(new java.awt.BorderLayout());

        caseTagsViewerPanel.setLayout(new java.awt.BorderLayout());

        jLabel12.setText(bundle.getString("CaseInformationPanel.jLabel12.text")); // NOI18N

        tagNameTextField.setEditable(false);
        tagNameTextField.setText(bundle.getString("CaseInformationPanel.tagNameTextField.text")); // NOI18N

        jLabel13.setText(bundle.getString("CaseInformationPanel.jLabel13.text")); // NOI18N

        tagDateTextField.setEditable(false);
        tagDateTextField.setText(bundle.getString("CaseInformationPanel.tagDateTextField.text")); // NOI18N

        jLabel14.setText(bundle.getString("CaseInformationPanel.jLabel14.text")); // NOI18N

        tagContentTextArea.setColumns(20);
        tagContentTextArea.setEditable(false);
        tagContentTextArea.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        tagContentTextArea.setRows(5);
        jScrollPane3.setViewportView(tagContentTextArea);

        caseTagControllerPanel.setLayout(new java.awt.BorderLayout());

        nextButton.setText(bundle.getString("CaseInformationPanel.nextButton.text")); // NOI18N
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });
        caseTagControllerPanel.add(nextButton, java.awt.BorderLayout.CENTER);

        prevButton.setText(bundle.getString("CaseInformationPanel.prevButton.text")); // NOI18N
        prevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtonActionPerformed(evt);
            }
        });
        caseTagControllerPanel.add(prevButton, java.awt.BorderLayout.WEST);

        currentTagLabel.setText(bundle.getString("CaseInformationPanel.currentTagLabel.text")); // NOI18N

        javax.swing.GroupLayout caseTagVeiwerPanelLayout = new javax.swing.GroupLayout(caseTagVeiwerPanel);
        caseTagVeiwerPanel.setLayout(caseTagVeiwerPanelLayout);
        caseTagVeiwerPanelLayout.setHorizontalGroup(
            caseTagVeiwerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(caseTagVeiwerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(caseTagVeiwerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(caseTagVeiwerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(caseTagVeiwerPanelLayout.createSequentialGroup()
                        .addComponent(tagNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tagDateTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addGroup(caseTagVeiwerPanelLayout.createSequentialGroup()
                        .addComponent(caseTagControllerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                        .addComponent(currentTagLabel)))
                .addContainerGap())
        );
        caseTagVeiwerPanelLayout.setVerticalGroup(
            caseTagVeiwerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(caseTagVeiwerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(caseTagVeiwerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tagNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(tagDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(caseTagVeiwerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(caseTagVeiwerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(currentTagLabel)
                    .addComponent(caseTagControllerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        caseTagsViewerPanel.add(caseTagVeiwerPanel, java.awt.BorderLayout.PAGE_START);

        caseTagsPanel.add(caseTagsViewerPanel, java.awt.BorderLayout.CENTER);

        caseTagsButtonsPanel.setPreferredSize(new java.awt.Dimension(100, 100));

        newTagsButton.setText(bundle.getString("CaseInformationPanel.newTagsButton.text")); // NOI18N
        newTagsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTagsButtonActionPerformed(evt);
            }
        });

        removeTagsButton.setText(bundle.getString("CaseInformationPanel.removeTagsButton.text")); // NOI18N
        removeTagsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeTagsButtonActionPerformed(evt);
            }
        });

        saveCaseButton.setText(bundle.getString("CaseInformationPanel.saveCaseButton.text")); // NOI18N
        saveCaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveCaseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout caseTagsButtonsPanelLayout = new javax.swing.GroupLayout(caseTagsButtonsPanel);
        caseTagsButtonsPanel.setLayout(caseTagsButtonsPanelLayout);
        caseTagsButtonsPanelLayout.setHorizontalGroup(
            caseTagsButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(caseTagsButtonsPanelLayout.createSequentialGroup()
                .addGroup(caseTagsButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(caseTagsButtonsPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(caseTagsButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newTagsButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(removeTagsButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)))
                    .addGroup(caseTagsButtonsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(saveCaseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)))
                .addContainerGap())
        );
        caseTagsButtonsPanelLayout.setVerticalGroup(
            caseTagsButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(caseTagsButtonsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newTagsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removeTagsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveCaseButton)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        caseTagsPanel.add(caseTagsButtonsPanel, java.awt.BorderLayout.EAST);

        tagsLogsPanel.add(caseTagsPanel, java.awt.BorderLayout.PAGE_START);

        add(tagsLogsPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void newTagsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTagsButtonActionPerformed
        TagsDialog tagDialog = new TagsDialog(this.parent,true);
        tagDialog.setVisible(true);
        
        Tag tag = tagDialog.getTag();
        this.addTag(tag);
    }//GEN-LAST:event_newTagsButtonActionPerformed

    private void removeTagsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeTagsButtonActionPerformed
        this.removeTag();
    }//GEN-LAST:event_removeTagsButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        showNextTag();
    }//GEN-LAST:event_nextButtonActionPerformed

    private void prevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtonActionPerformed
        showPreviousTag();
    }//GEN-LAST:event_prevButtonActionPerformed

    private void saveCaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveCaseButtonActionPerformed
        this.saveCaseModifications();
    }//GEN-LAST:event_saveCaseButtonActionPerformed

    private void loadCaseAuditing() {
        Thread loadingThread = new Thread(new Runnable() { 
            @Override
            public void run() {
                try {
                    final List<String> lines = FileUtil.getFileContentInList(
                            new File(caseFacade.getCaseAuditingFileLocation()));
                    EventQueue.invokeLater(new Runnable() { 
                        @Override
                        public void run() {
                          for(String line: lines) {
                              JTableUtil.addRowToJTable(caseLogsTable, 
                                      Utilities.getStringListFromCommaSeparatedString(line)
                                      .toArray());
                          }  
                        }
                    });
                } catch (Exception ex) {
                    Logger.getLogger(CaseInformationPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        
        loadingThread.start();
    }
    
    /**
     * Save case modifications
     */
    public void saveCaseModifications() {
        if ( this.caseFacade.saveTags() ) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Case have been saved", 
                    "Saving Case Message", JOptionPane.INFORMATION_MESSAGE);
            
            // update current
            this.caseFacade.updateMonitorChangingList();
        }
    }
    
    /**
     * go back to previous tag, and show it
     */
    public void showPreviousTag() {
        if ( this.currentTagIndex > 0 ) {
            this.currentTagIndex--;
            displayCurrentTag(currentTagIndex);
        }
    }
    
    /**
     * show the next tag if there is a tag
     */
    public void showNextTag() {
        if ( this.currentTagIndex < this.caseFacade.getTags().size() ) {
            this.currentTagIndex++;
            displayCurrentTag(currentTagIndex);
        }        
    }
    
    /**
     * add new tag, then update the tags indexer
     */
    private void addTag(final Tag tag) {
        if ( tag != null ) {
            this.caseFacade.addTag(tag);
            int index = this.caseFacade.getTags().indexOf(tag);
            this.currentTagIndex = index;
            displayCurrentTag(currentTagIndex);
        }
    }
    
    /**
     * remove current tag
     */
    private void removeTag() {
        this.caseFacade.removeTag(this.currentTagIndex);
        this.initializingTagsPanel();
    }
    
    /**
     * initializing tags panel 
     */
    public void initializingTagsPanel() {
        List<Tag> tags = this.caseFacade.getTags();
        this.currentTagIndex = 0;
        
        if ( !tags.isEmpty() )
            this.displayTagElement(tags.get(this.currentTagIndex));
        else
            this.resetTagsElements();
        
        this.currentTagLabel.setText("(" + this.currentTagIndex + "/" + tags.size() + ")");
        this.checkingButtons();
    }
    
    /**
     * display tag specified by current tag index
     */
    private void displayCurrentTag(final int index) {
        List<Tag> tags = this.caseFacade.getTags();
        Tag tag = tags.get(index);
        displayTagElement(tag);
        this.currentTagLabel.setText("(" + index + "/" + tags.size() + ")");
        this.checkingButtons();
    }
    
    /*
     * display tag in swing ui elements, and then revalidate the frame
     */
    private void displayTagElement(final Tag tag) {
        assert tag != null; 
        this.tagNameTextField.setText(tag.getName());
        this.tagDateTextField.setText(DateUtil.formatDate(tag.getDate()));
        this.tagContentTextArea.setText(tag.getMessage());  
        this.revalidate();
    }
    
    /**
     * Resetting Tags Element to empty string
     * this because when delete last tag from list
     * we should clean the ui elements
     */
    private void resetTagsElements() {
        this.tagNameTextField.setText("");
        this.tagDateTextField.setText("");
        this.tagContentTextArea.setText("");
        this.currentTagLabel.setText("(" + 0 + "/" + this.caseFacade.getTags().size() + ")");
    }
    
    /**
     * checking buttons on frame, to disable it if no data
     */
    private void checkingButtons() {
        /**
         * disable remove button when their is not tags
         */
        if ( this.caseFacade.getTags().isEmpty() )
            this.removeTagsButton.setEnabled(false);
        else
            this.removeTagsButton.setEnabled(true);
        
        /**
         * disable previous button
         */
        if ( this.currentTagIndex == 0 )
            this.prevButton.setEnabled(false);
        else
            this.prevButton.setEnabled(true);
        
        /**
         * disable next button
         */
        if ( this.currentTagIndex < this.caseFacade.getTags().size()-1)
            this.nextButton.setEnabled(true);
        else
            this.nextButton.setEnabled(false);
    }
    
    /**
     * display case information in the related panel
     */
    public void displayCaseInformationPanel() {
        this.caseNameTextField.setText(this.caseFacade.getCase().getCaseName());
        this.createdDateTextField.setText(DateUtil.formatDate(this.caseFacade.getCase().getCreateTime()));
        this.createdByTextField.setText(this.caseFacade.getCase().getInvestigatorName());
        this.casePathTextField.setText(this.caseFacade.getCase().getCaseLocation());
        this.caseDescriptionTextField.setText(this.caseFacade.getCase().getDescription());
       
        for(String doc: this.caseFacade.getCase().getEvidenceSourceLocation()) {
            JListUtil.addToList(doc, this.filsSystemSourcesModel, this.caseSourcesList);
        }
        
        for(EmailConfiguration emailConfiguration: this.caseFacade.getCase().getEmailConfigurations()) {
            JListUtil.addToList(emailConfiguration.getUserName(), this.emailSourcesModel, this.emailSourcesList);
        }
    }
    
    /**
     * Display information on case panel
     * this information will be changed after each indexing
     */
    public void displayMutableCaseInformationPanel() {
        CaseHistory history = this.caseFacade.getCaseHistory();
        
        this.lastModifiedTextField.setText(history.getLastModified());
        this.indexedTextField.setText(String.valueOf(history.getIsCaseIndexed()));
        this.itemIndexedTextField.setText(String.valueOf(history.getNumberOfItemsIndexed()));
        this.caseSizeTextField.setText(String.valueOf(history.getCaseSize()));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField caseDescriptionTextField;
    private javax.swing.JPanel caseInformationPanel;
    private javax.swing.JPanel caseLogsPanel;
    private javax.swing.JTable caseLogsTable;
    private javax.swing.JTextField caseNameTextField;
    private javax.swing.JTextField casePathTextField;
    private javax.swing.JTextField caseSizeTextField;
    private javax.swing.JList caseSourcesList;
    private javax.swing.JPanel caseTagControllerPanel;
    private javax.swing.JPanel caseTagVeiwerPanel;
    private javax.swing.JPanel caseTagsButtonsPanel;
    private javax.swing.JPanel caseTagsPanel;
    private javax.swing.JPanel caseTagsViewerPanel;
    private javax.swing.JTextField createdByTextField;
    private javax.swing.JTextField createdDateTextField;
    private javax.swing.JLabel currentTagLabel;
    private javax.swing.JList emailSourcesList;
    private javax.swing.JTextField indexedTextField;
    private javax.swing.JTextField itemIndexedTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField lastModifiedTextField;
    private javax.swing.JButton newTagsButton;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton prevButton;
    private javax.swing.JButton removeTagsButton;
    private javax.swing.JButton saveCaseButton;
    private javax.swing.JTextArea tagContentTextArea;
    private javax.swing.JTextField tagDateTextField;
    private javax.swing.JTextField tagNameTextField;
    private javax.swing.JPanel tagsLogsPanel;
    // End of variables declaration//GEN-END:variables
}
