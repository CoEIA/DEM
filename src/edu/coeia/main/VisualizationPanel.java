/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VisualizationPanel.java
 *
 * Created on Oct 5, 2011, 11:22:33 AM
 */
package edu.coeia.main;

/**
 *
 * @author wajdyessam
 */

import edu.coeia.cases.Case;
import edu.coeia.cases.CaseHistoryHandler;
import edu.coeia.indexing.IndexReaderThread ;
import edu.coeia.gutil.InfiniteProgressPanel;
import edu.coeia.util.FilesPath;

import java.awt.BorderLayout;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JFrame;

import java.io.IOException;

import java.util.logging.Logger;
import java.util.logging.Level;

public class VisualizationPanel extends javax.swing.JPanel {

    private Case caseObj;
    private JFrame parentFrame;
    private FileSystemPanel parentPanel;
    private final static Logger logger = Logger.getLogger(edu.coeia.util.FilesPath.LOG_NAMESPACE);
    
    /** Creates new form VisualizationPanel */
    public VisualizationPanel(Case aIndex, JFrame aParentFrame, FileSystemPanel aParentPanel) {
        initComponents();
        
        this.caseObj = aIndex;
        this.parentFrame = aParentFrame;
        this.parentPanel = aParentPanel;

        disableNotIndexedComponent();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        indexVisualizingPanel = new javax.swing.JPanel();
        indexVisualizationButtonPanel = new javax.swing.JPanel();
        indexVisulizingButton = new javax.swing.JButton();
        indexVisualizingPiePanel = new javax.swing.JPanel();

        indexVisualizingPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        indexVisualizingPanel.setLayout(new java.awt.BorderLayout());

        indexVisualizationButtonPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index Visualization", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        indexVisulizingButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        indexVisulizingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/coeia/main/resources/chart_pie.png"))); // NOI18N
        indexVisulizingButton.setText("Index Visualization");
        indexVisulizingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indexVisulizingButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout indexVisualizationButtonPanelLayout = new javax.swing.GroupLayout(indexVisualizationButtonPanel);
        indexVisualizationButtonPanel.setLayout(indexVisualizationButtonPanelLayout);
        indexVisualizationButtonPanelLayout.setHorizontalGroup(
            indexVisualizationButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexVisualizationButtonPanelLayout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(indexVisulizingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(232, Short.MAX_VALUE))
        );
        indexVisualizationButtonPanelLayout.setVerticalGroup(
            indexVisualizationButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexVisualizationButtonPanelLayout.createSequentialGroup()
                .addComponent(indexVisulizingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        indexVisualizingPanel.add(indexVisualizationButtonPanel, java.awt.BorderLayout.NORTH);

        indexVisualizingPiePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Visualizing File Extension in Index", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        indexVisualizingPiePanel.setLayout(new java.awt.BorderLayout());
        indexVisualizingPanel.add(indexVisualizingPiePanel, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 692, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(indexVisualizingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 405, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(indexVisualizingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void indexVisulizingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indexVisulizingButtonActionPerformed
        generateVisualization();
    }//GEN-LAST:event_indexVisulizingButtonActionPerformed

    public void setIndexVisualizationPanel(JPanel panel) {
        indexVisualizingPiePanel.add(panel, BorderLayout.CENTER);
        indexVisualizingPiePanel.validate();
    }

    private void disableNotIndexedComponent() {
//        if (caseObj.getDocumentInIndex().isEmpty()) {
//            indexVisulizingButton.setEnabled(false);
//        }
    }
    
    private void generateVisualization() {
        try {
            if (CaseHistoryHandler.get(this.caseObj.getIndexName()).getIsCaseIndexed() == false ) {
                JOptionPane.showMessageDialog(this, "please do the indexing operation first before do any operation",
                        "Case is not indexed", JOptionPane.ERROR_MESSAGE);
                return;
            }

            indexVisualizingPiePanel.removeAll();

            String indexPath = caseObj.getCaseLocation() + "\\" + FilesPath.INDEX_PATH;
            String indexName = caseObj.getIndexName();

            InfiniteProgressPanel i = new InfiniteProgressPanel("Loading Index Extensions ...");
            parentFrame.setGlassPane(i);
            i.start();

            IndexReaderThread thread = new IndexReaderThread(i, indexPath, indexName, IndexReaderThread.IndexItem.VISUALIZATION, this);
            thread.execute();

            indexVisualizingPiePanel.repaint();
            indexVisualizingPiePanel.validate();
        } catch (IOException e) {
            logger.log(Level.SEVERE, "Uncaught exception", e);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel indexVisualizationButtonPanel;
    private javax.swing.JPanel indexVisualizingPanel;
    private javax.swing.JPanel indexVisualizingPiePanel;
    private javax.swing.JButton indexVisulizingButton;
    // End of variables declaration//GEN-END:variables
}
